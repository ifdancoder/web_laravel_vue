services:
    db:
        container_name: db
        build:
            context: ./docker/db
        cap_add:
            - SYS_NICE
        networks:
            - network
        restart: always
        environment:
            MYSQL_DATABASE: web_db
            MYSQL_ROOT_PASSWORD: uKfgesgsgCBg1331
            MYSQL_USER: web_user
            MYSQL_PASSWORD: uKfgesgsgCBg1331
        ports:
            - '3306:3306'
        healthcheck:
            test: mariadb -u$$MYSQL_USER -p$$MYSQL_PASSWORD web_db -h localhost
            interval: 10s
            timeout: 10s
            retries: 5
        volumes:
            - ./docker/db/db_data:/var/lib/mysql
            - ./docker/db/dumps:/docker-entrypoint-initdb.d/
    nginx:
        container_name: nginx
        build:
            context: ./docker/nginx
        depends_on:
            backend:
                condition: service_healthy
        ports:
            - "80:80"
            - "443:443"
        restart: always
        networks:
            - network
        healthcheck:
            test: ["CMD-SHELL", "curl --silent --fail localhost:80/health-check || exit 1"]
            interval: 20s
            timeout: 20s
            retries: 10
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    backend:
        container_name: backend
        build:
            context: ./
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "9000:9000"
        restart: always
        healthcheck:
            test: php -f /var/www/healthcheck.php
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 5s
        networks:
            - network
        working_dir: /var/www
        volumes:
            - ./:/var/www
    frontend:
        build:
            context: ./docker/frontend
        container_name: frontend
        working_dir: /var/www
        ports:
            - "8080:8080"
        volumes:
            - ./:/var/www
        command: bash -c "npm install && npm run build"
        depends_on:
            backend:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost/health-check"]
            interval: 20s
            timeout: 20s
            retries: 10

networks:
    network:
        driver: bridge
